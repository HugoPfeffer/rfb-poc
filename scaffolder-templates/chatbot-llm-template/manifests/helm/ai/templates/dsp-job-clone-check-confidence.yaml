kind: Job
apiVersion: batch/v1
metadata:
  name: clone-repo
  namespace: {{ .Values.app.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  backoffLimit: 4
  template:
    spec:
      serviceAccount: demo-setup
      serviceAccountName: demo-setup
      initContainers:
        - name: wait-for-workbench
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
          args:
            - '-ec'
            - >-
              echo -n "Waiting for workbench pod in {{ .Values.app.namespace }} namespace"

              while [ -z "$(oc get pods -n {{ .Values.app.namespace }} -l app={{ .Values.app.workbench.name }}
              -o custom-columns=STATUS:.status.phase --no-headers | grep Running
              2>/dev/null)" ]; do
                  echo -n '.'
                  sleep 1
              done

              echo "Workbench pod is running in {{ .Values.app.namespace }} namespace"
      containers:
        - name: git-clone
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
          args:
            - '-ec'
            - >-
              pod_name=$(oc get pods --selector=app={{ .Values.app.workbench.name }} -o
              jsonpath='{.items[0].metadata.name}')

              oc exec $pod_name -- /bin/bash -c "git clone https://github.com/treddy08/check-confidence-llm"

              oc exec $pod_name -- /bin/bash -c "sed -i 's/VAR_MODEL/{{ .Values.app.model }}/g' check-confidence-llm/*"

              oc exec $pod_name -- /bin/bash -c "sed -i 's/VAR_NAMESPACE/{{ .Values.app.namespace }}/g' check-confidence-llm/*"

              oc exec $pod_name -- /bin/bash -c "pip install langchain langchain_community openai"

              oc exec $pod_name -- /bin/bash -c "pip install -U langchain-huggingface"
      restartPolicy: Never
